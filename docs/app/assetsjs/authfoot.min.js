//PROFILEIMAGE CODE

function profileImage() {
  var user = firebase.auth().currentUser;
  var name, email, photoUrl, uid, emailVerified;
  if (firebase.auth().currentUser.emailVerified) {
    console.log("account is fine");
  } else {
    console.log(
      "You Email is Not Verified. Click OK to send an email to you so you can get verified."
    );

    user
      .sendEmailVerification()
      .then(function() {
        // Email sent.
      })
      .catch(function(error) {
        // An error occured.
      });
  }

  if (user != null) {
    name = user.displayName;
    email = user.email;
    photoUrl = user.photoURL;
    console.log(photoUrl);
    if (photoUrl) {
      document.getElementById("photoimage").src = photoUrl;
    }
    emailVerified = user.emailVerified;
    uid = user.uid; // The user's ID, unique to the Firebase project. Do NOT use
    // this value to authenticate with your backend server, if
    // you have one. Use User.getToken() instead.
  }
}

//EMAIL VERIFICATION CHECK

function emailCheck() {
  var user = firebase.auth().currentUser;
  var name, email, photoUrl, uid, emailVerified;
  if (firebase.auth().currentUser.emailVerified) {
    console.log("account is fine");
  } else {
    console.log(
      "You Email is Not Verified. Click OK to send an email to you so you can get verified."
    );

    user
      .sendEmailVerification()
      .then(function() {
        // Email sent.
      })
      .catch(function(error) {
        // An error occured.
      });
  }

  if (user != null) {
    name = user.displayName;
    email = user.email;
    photoUrl = user.photoURL;
    document.getElementById("email").innerHTML = email.substring(0, 20);
    emailVerified = user.emailVerified;
    uid = user.uid; // The user's ID, unique to the Firebase project. Do NOT use
    // this value to authenticate with your backend server, if
    // you have one. Use User.getToken() instead.
  }
}

//THE HELLO WIDGET

window.onload = function async() {
  firebase.auth().onAuthStateChanged(function(user) {
    //Make a list of trap holders

    //Personalize the Ui

    //Name
    document.getElementById("header").innerHTML =
      "Hello " + user.displayName.substring(0, 20);

    //Traps
    console.log(user.uid);

    //His
  });
};

//SIGNOUT

document.getElementById("exit").onclick = function() {
  firebase
    .auth()
    .signOut()
    .then(
      function() {
        console.log("Signed Out");
        document.getElementById("pagehide").innerhtml = "forget it.";
      },
      function(error) {
        console.error("Sign Out Error", error);
      }
    );
  firebase.auth().onAuthStateChanged(
    function(user) {
      if (user) {
        // User is signed in.
        displayName = user.displayName;
        email = user.email;
        emailVerified = user.emailVerified;
        photoURL = user.photoURL;
        uid = user.uid;
        phoneNumber = user.phoneNumber;
        providerData = user.providerData;
        if (user.email === null) {
          user.email = user.phoneNumber;
        }
        if (user.email == null) {
          user.email = user.phoneNumber;
        }
        try {
          LogRocket.identify(uid, {
            name: displayName,
            email: email,

            // Add your own custom user variables here, ie:
            ph: phoneNumber,
            providerinfo: providerData
          });
        } catch (error) {
          console.log();
        }
        if (firebase.auth().currentUser.emailVerified) {
          console.log("account is fine");
        } else {
          console.log(
            "You Email is Not Verified. Click OK to send an email to you so you can get verified."
          );

          user
            .sendEmailVerification()
            .then(function() {
              // Email sent.
            })
            .catch(function(error) {
              // An error occured.
            });
        }

        analytics.identify(user.uid, {
          name: displayName,
          email: user.email
        });
        user.getIdToken().then(function(accessToken) {
          document.getElementById("sign-in-status").textContent = "Signed in";
          document.getElementById("sign-in").textContent = "Sign out";
          document.getElementById(
            "account-details"
          ).textContent = JSON.stringify(
            {
              displayName: displayName,
              email: email,
              emailVerified: emailVerified,
              phoneNumber: phoneNumber,
              photoURL: photoURL,
              uid: uid,
              accessToken: accessToken,
              providerData: providerData
            },
            null,
            "  "
          );
          console.log(
            JSON.stringify(
              {
                displayName: displayName,
                email: email,
                emailVerified: emailVerified,
                phoneNumber: phoneNumber,
                photoURL: photoURL,
                uid: uid,
                accessToken: accessToken,
                providerData: providerData
              },
              null,
              "  "
            )
          );
        });
      } else {
        // User is signed out.
        document.getElementById("sign-in-status").textContent = "Signed out";
        document.getElementById("sign-in").textContent = "Sign in";
        document.getElementById("account-details").textContent = "null";
        window.open("/");
        document.getElementById("pagehide").innerhtml = "forget it now!";
        document.location.href = "/authneeded.html";
      }
    },
    function(error) {
      console.log(error);
    }
  );
};
firebase.auth().onAuthStateChanged(
  function(user) {
    if (user) {
      // User is signed in.
      displayName = user.displayName;
      email = user.email;
      emailVerified = user.emailVerified;
      photoURL = user.photoURL;
      uid = user.uid;
      phoneNumber = user.phoneNumber;
      providerData = user.providerData;
      if (email === null) {
        user.email = user.phoneNumber;
      }
      if (email == null) {
        user.email = user.phoneNumber;
      }
      if (firebase.auth().currentUser.emailVerified) {
        console.log("account is fine");
      } else {
        console.log(
          "You Email is Not Verified. Click OK to send an email to you so you can get verified."
        );

        user
          .sendEmailVerification()
          .then(function() {
            // Email sent.
          })
          .catch(function(error) {
            // An error occured.
          });
      }

      profileImage();
      emailCheck();
      try {
        LogRocket.identify(uid, {
          name: displayName,
          email: email,

          // Add your own custom user variables here, ie:
          ph: phoneNumber,
          providerinfo: providerData
        });
      } catch (error) {
        console.log();
      }
      try {
        document.getElementById("ui-id-2").style.height = "200px";
        document.getElementById("ui-id-4").style.height = "200px";
        document.getElementById("ui-id-6").style.height = "200px";
      } catch (error) {
        console.log();
      }
      user.getIdToken().then(function(accessToken) {
        document.getElementById("sign-in-status").textContent = "Signed in";
        document.getElementById("sign-in").textContent = "Sign out";
        document.getElementById("account-details").textContent = JSON.stringify(
          {
            displayName: displayName,
            email: email,
            emailVerified: emailVerified,
            phoneNumber: phoneNumber,
            photoURL: photoURL,
            uid: uid,
            accessToken: accessToken,
            providerData: providerData
          },
          null,
          "  "
        );
      });
    } else {
      // User is signed out.
      document.getElementById("sign-in-status").textContent = "Signed out";
      document.getElementById("sign-in").textContent = "Sign in";
      document.getElementById("account-details").textContent = "null";
      document.getElementById("pagehide").innerhtml = "forget it now!";
      document.location.href = "/authneeded.html";
      profileImage();
    }
  },
  function(error) {
    console.log(error);
    profileImage();
    var user = firebase.auth().currentUser;
    if (firebase.auth().currentUser.emailVerified) {
      console.log("account is fine");
    } else {
      console.log(
        "You Email is Not Verified. Click OK to send an email to you so you can get verified."
      );

      user
        .sendEmailVerification()
        .then(function() {
          // Email sent.
        })
        .catch(function(error) {
          // An error occured.
        });
    }
  }
);
document.getElementById("pagehide").innerhtml = "true";

//THE LOADER SCRIPT

let loaderelement = document.getElementById("loader");
let ttapp = document.getElementById("page-content-ttaapp");

async function hider() {
  //storer();

  ttapp.style.visibility = "visible";
  console.log(ttapp.style.display);
  loaderelement.style.display = "none";
}
myFunction();
function myFunction() {
  setTimeout(function() {
    hider();
  }, 10000);
}

//ERROR TRACKING, ANALYTICS
//window.onload = function () { hider(); };
//page-content-ttaapp
window.addEventListener("load", hider);

Sentry.init({
  dsn: "https://b55d68ef3c104440a37367f5ef80bc22@sentry.io/1478181"
});

//SERVICE WORKER

// Add this below content to your HTML page, or add the js file to your page at the very top to register service worker

// Check compatibility for the browser we're running this in
function sw() {
  if ("serviceWorker" in navigator) {
    if (navigator.serviceWorker.controller) {
      console.log(
        "[PWA Builder] active service worker found, no need to register"
      );
    } else {
      // Register the service worker
      navigator.serviceWorker
        .register("/pwabuilder-sw.js", {
          scope: "./"
        })
        .then(function(reg) {
          console.log(
            "[PWA Builder] Service worker has been registered for scope: " +
              reg.scope
          );
        });
    }
  }
}
sw();
let deferredPrompt = null;

window.addEventListener("beforeinstallprompt", e => {
  // Prevent Chrome 67 and earlier from automatically showing the prompt
  e.preventDefault();
  // Stash the event so it can be triggered later.
  deferredPrompt = e;
});

async function install() {
  if (deferredPrompt) {
    deferredPrompt.prompt();
    console.log(deferredPrompt);
    deferredPrompt.userChoice.then(function(choiceResult) {
      if (choiceResult.outcome === "accepted") {
        console.log("Your PWA has been installed");
      } else {
        console.log("User chose to not install your PWA");
      }

      deferredPrompt = null;
    });
  }
}

install();

// PREVENTS PWA ERRORS

window.mobileAndTabletcheck = function() {
  var check = false;
  (function(a) {
    if (
      /(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino|android|ipad|playbook|silk/i.test(
        a
      ) ||
      /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(
        a.substr(0, 4)
      )
    )
      check = true;
  })(navigator.userAgent || navigator.vendor || window.opera);
  return check;
};

//MAKES PAGE RESPONSIVE

if (window.mobileAndTabletcheck()) {
  $("#trapTable").slideUp();
  $("#MobileTraps").slideDown();
  $(".mdl-card").css("display", "flex");
  $(".mdl-card").css("margin-top", "10px");
  console.info("MOBILEE");
}

// Vue.Js CONTENT

var trapcard = new Vue({
  el: "#trapcard1",
  data: {
    trap: "BackYardTrap",
    status: "FULL"
  }
});

//RIPPLE EFECTS

mdc.ripple.MDCRipple.attachTo(document.querySelector("#ATBtn"));
if (window.mobileAndTabletcheck()) {
  $("#spacercardy").css("display", "inline");
}

mdc.ripple.MDCRipple.attachTo(document.querySelector("#purcahseTrap"));

document.addEventListener("keydown", event => {
  if (event.isComposing || event.keyCode === 91) {
    window.print();
  }
});
try {
  mdc.ripple.MDCRipple.attachTo(document.querySelector("#EXS"));
} catch (error) {
  console.log();
}

//MS ACCOUNT LINKING - AUTHS USER WITH MICROSOFT.

function lasboto() {
  var provider = new firebase.auth.OAuthProvider("microsoft.com");
  firebase
    .auth()
    .signInWithPopup(provider)
    .then(function(result) {
      console.log("You Added Microsoft!");
    })
    .catch(function(error) {
      // Handle error.
      if (error.code == "auth/account-exists-with-different-credential") {
        console.log(
          "You already have an account here with us. Please sign in with another service (like Email/Password or Google) to connect this account. "
        );
      } else {
        console.log(error);
        alert("An Error Occured");
        document.location.reload();
      }
    });
}
document.getElementById("msauth").addEventListener("click", lasboto);
